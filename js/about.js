/* ==========================================
   –ó–∞–≥—Ä—É–∑–∫–∞ –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
   ========================================== */

class AboutReviews {
  constructor() {
    this.reviewsGrid = document.getElementById('reviewsGrid');
    this.init();
  }
  
  async init() {
    if (!window.aboutData) {
      console.error('About data –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      return;
    }
    
    await this.loadReviews();
  }
  
  async loadReviews() {
    try {
      const response = await fetch(window.aboutData.ajaxUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: new URLSearchParams({
          action: 'get_reviews'
        })
      });
      
      const result = await response.json();
      
      if (result.success) {
        this.renderReviews(result.reviews);
      } else {
        throw new Error(result.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤:', error);
      this.showError();
    }
  }
  
  renderReviews(reviews) {
    if (!this.reviewsGrid) return;
    
    this.reviewsGrid.innerHTML = '';
    
    if (reviews.length === 0) {
      this.reviewsGrid.innerHTML = '<p class="no-reviews">–û—Ç–∑—ã–≤—ã –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç</p>';
      return;
    }
    
    reviews.forEach((review) => {
      const reviewItem = document.createElement('div');
      reviewItem.className = 'review-item';
      
      // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
      const authorDiv = document.createElement('div');
      authorDiv.className = 'review-item__author';
      authorDiv.textContent = review.author;
      
      const textDiv = document.createElement('div');
      textDiv.className = 'review-item__text';
      
      // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞
      let cleanText = review.text;
      
      // –£–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–Ω–æ—Å–æ–≤
      cleanText = cleanText.replace(/\\n/g, '\n');  // \\n -> \n
      cleanText = cleanText.replace(/\\\\/g, '');   // \\ -> –ø—É—Å—Ç–æ—Ç–∞
      cleanText = cleanText.replace(/\\\n/g, '\n'); // \n -> \n
      
      // –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã
      const paragraphs = cleanText.split('\n\n').filter(p => p.trim());
      
      paragraphs.forEach(paragraph => {
        const p = document.createElement('p');
        
        // –£–±–∏—Ä–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ —Å–ª–µ—à–∏
        const cleanParagraph = paragraph.replace(/\\/g, '');
        
        // –ó–∞–º–µ–Ω—è–µ–º –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã –Ω–∞ <br>
        const lines = cleanParagraph.split('\n');
        
        lines.forEach((line, index) => {
          if (index > 0) {
            p.appendChild(document.createElement('br'));
          }
          
          // –†–∞–∑–±–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ —á–∞—Å—Ç–∏ —Å —ç–º–æ–¥–∑–∏
          const parts = line.split(/(‚ù§Ô∏è|üíï|‚ú®|üòä|üë∂|üì∏)/);
          
          parts.forEach(part => {
            if (/‚ù§Ô∏è|üíï|‚ú®|üòä|üë∂|üì∏/.test(part)) {
              const span = document.createElement('span');
              span.className = 'emoji';
              span.textContent = part;
              p.appendChild(span);
            } else if (part.trim()) {
              p.appendChild(document.createTextNode(part));
            }
          });
        });
        
        textDiv.appendChild(p);
      });
      
      reviewItem.appendChild(authorDiv);
      reviewItem.appendChild(textDiv);
      this.reviewsGrid.appendChild(reviewItem);
    });
  }
  
  showError() {
    if (this.reviewsGrid) {
      this.reviewsGrid.innerHTML = '<p class="reviews-error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–∑—ã–≤–æ–≤</p>';
    }
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
  if (document.querySelector('.about-reviews')) {
    new AboutReviews();
  }
});
